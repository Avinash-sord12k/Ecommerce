/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/welcome": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** <Lambda> */
        get: operations["_lambda__api_v1_welcome_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create User */
        post: operations["create_user_api_v1_users_register_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Login User */
        post: operations["login_user_api_v1_users_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get User Me */
        get: operations["get_user_me_api_v1_users_me_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/address/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Address */
        post: operations["create_address_api_v1_address_create_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/address/get-by-id/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Address */
        get: operations["get_address_api_v1_address_get_by_id__id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/address/get-all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Address */
        get: operations["get_all_address_api_v1_address_get_all_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/address/update/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Address */
        put: operations["update_address_api_v1_address_update__id__put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/address/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Address */
        delete: operations["delete_address_api_v1_address__id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/role/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Role */
        post: operations["create_role_api_v1_role_create_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/role/get-all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Roles */
        get: operations["get_all_roles_api_v1_role_get_all_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/role/get-by-id/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Role By Id */
        get: operations["get_role_by_id_api_v1_role_get_by_id__id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/role/update/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Role */
        put: operations["update_role_api_v1_role_update__id__put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/role/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Role */
        delete: operations["delete_role_api_v1_role__id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/permission/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Permission */
        post: operations["create_permission_api_v1_permission_create_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/permission/get-all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Permissions */
        get: operations["get_all_permissions_api_v1_permission_get_all_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/permission/get-by-id/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Permission By Id */
        get: operations["get_permission_by_id_api_v1_permission_get_by_id__id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/permission/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Permission */
        delete: operations["delete_permission_api_v1_permission__id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/category/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Category */
        post: operations["create_category_api_v1_category_create_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/category/get-by-id/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Category By Id */
        get: operations["get_category_by_id_api_v1_category_get_by_id__id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/category/get-all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Category */
        get: operations["get_category_api_v1_category_get_all_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/category/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Category */
        delete: operations["delete_category_api_v1_category__id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/subcategory/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Sub Category */
        post: operations["create_sub_category_api_v1_subcategory_create_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/subcategory/get-by-id/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Sub Category By Id */
        get: operations["get_sub_category_by_id_api_v1_subcategory_get_by_id__id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/subcategory/get-all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Sub Category */
        get: operations["get_sub_category_api_v1_subcategory_get_all_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/subcategory/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Sub Category */
        delete: operations["delete_sub_category_api_v1_subcategory__id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/product/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Product */
        post: operations["create_product_api_v1_product_create_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/product/get-by-id/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Product By Id */
        get: operations["get_product_by_id_api_v1_product_get_by_id__id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/product/get-by-category-id": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Product By Category Id */
        get: operations["get_product_by_category_id_api_v1_product_get_by_category_id_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/product/get-by-subcategory-id": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Product By Sub Category Id */
        get: operations["get_product_by_sub_category_id_api_v1_product_get_by_subcategory_id_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/product/update/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Product */
        put: operations["update_product_api_v1_product_update__id__put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/product/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Product */
        delete: operations["delete_product_api_v1_product__id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/cart/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Cart */
        post: operations["create_cart_api_v1_cart_create_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/cart/get-by-id/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Cart */
        get: operations["get_cart_api_v1_cart_get_by_id__id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/cart/get-all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Carts */
        get: operations["get_all_carts_api_v1_cart_get_all_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/cart/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Cart */
        delete: operations["delete_cart_api_v1_cart__id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/cart/update/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Cart */
        put: operations["update_cart_api_v1_cart_update__id__put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/cart/add-item": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add Item To Cart */
        post: operations["add_item_to_cart_api_v1_cart_add_item_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/cart/remove-item/{cart_id}/{product_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Remove Item From Cart */
        delete: operations["remove_item_from_cart_api_v1_cart_remove_item__cart_id___product_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AddToCartRequestModel */
        AddToCartRequestModel: {
            /**
             * Cart Id
             * @description ID of the cart
             */
            cart_id: number;
            /**
             * Product Id
             * @description ID of the product
             */
            product_id: number;
            /**
             * Quantity
             * @description Quantity of the product
             */
            quantity: number;
        };
        /** AddressCreateModel */
        AddressCreateModel: {
            /**
             * Name
             * @description Name of the address
             */
            name: string;
            /**
             * Address
             * @description Address of the address
             */
            address: string;
            /**
             * City
             * @description City of the address
             */
            city: string;
            /**
             * State
             * @description State of the address
             */
            state: string;
            /**
             * Country
             * @description Country of the address
             */
            country: string;
            /**
             * Pincode
             * @description Pincode of the address
             */
            pincode: string;
        };
        /** AddressResponseModel */
        AddressResponseModel: {
            /**
             * Name
             * @description Name of the address
             */
            name: string;
            /**
             * Address
             * @description Address of the address
             */
            address: string;
            /**
             * City
             * @description City of the address
             */
            city: string;
            /**
             * State
             * @description State of the address
             */
            state: string;
            /**
             * Country
             * @description Country of the address
             */
            country: string;
            /**
             * Pincode
             * @description Pincode of the address
             */
            pincode: string;
            /**
             * Id
             * @description ID of the address
             */
            id: number;
            /**
             * User Id
             * @description ID of the user
             */
            user_id: number;
        };
        /** AllAddressResponseModel */
        AllAddressResponseModel: {
            /** Addresses */
            addresses: components["schemas"]["AddressResponseModel"][];
        };
        /** AllCartsResponseModel */
        AllCartsResponseModel: {
            /** Carts */
            carts: components["schemas"]["CartsResponseModel"][];
        };
        /** AllCategoriesResponseModel */
        AllCategoriesResponseModel: {
            /** Categories */
            categories: components["schemas"]["CategoryResponseModel"][];
        };
        /** AllPermissionsResponseModel */
        AllPermissionsResponseModel: {
            /** Permissions */
            permissions: components["schemas"]["PermissionResponseModel"][];
        };
        /** AllRolesResponseModel */
        AllRolesResponseModel: {
            /** Roles */
            roles: components["schemas"]["MinimalRoleResponseModel"][];
        };
        /** AllSubCategoriesResponseModel */
        AllSubCategoriesResponseModel: {
            /** Sub Categories */
            sub_categories: components["schemas"]["SubCategoryResponseModel"][];
        };
        /** Body_login_user_api_v1_users_login_post */
        Body_login_user_api_v1_users_login_post: {
            /** Grant Type */
            grant_type?: string | null;
            /** Username */
            username: string;
            /** Password */
            password: string;
            /**
             * Scope
             * @default
             */
            scope: string;
            /** Client Id */
            client_id?: string | null;
            /** Client Secret */
            client_secret?: string | null;
        };
        /** CartItemsResponseModel */
        CartItemsResponseModel: {
            /**
             * Id
             * @description ID of the cart item
             */
            id: number;
            /**
             * Product Id
             * @description ID of the product
             */
            product_id: number;
            /**
             * Quantity
             * @description Quantity of the product
             */
            quantity: number;
        };
        /** CartResponseModel */
        CartResponseModel: {
            /**
             * Id
             * @description ID of the cart
             */
            id: number;
        };
        /**
         * CartStatus
         * @enum {string}
         */
        CartStatus: "active" | "inactive" | "abandoned";
        /** CartsResponseModel */
        CartsResponseModel: {
            /**
             * Id
             * @description ID of the cart
             */
            id: number;
            /**
             * Name
             * @description Name of the cart
             */
            name: string;
            /**
             * Reminder Date
             * @description Reminder date of the cart
             */
            reminder_date?: string | null;
            /** @description Status of the cart */
            status: components["schemas"]["CartStatus"];
        };
        /** CategoryCreateModel */
        CategoryCreateModel: {
            /**
             * Name
             * @description Name of the category
             */
            name: string;
        };
        /** CategoryResponseModel */
        CategoryResponseModel: {
            /**
             * Id
             * @description ID of the category
             */
            id: number;
            /**
             * Name
             * @description Name of the category
             */
            name: string;
        };
        /** CreateCartRequestModel */
        CreateCartRequestModel: {
            /**
             * Name
             * @description Name of the cart
             */
            name: string;
            /**
             * Reminder Date
             * @description Reminder date of the cart
             */
            reminder_date?: string | null;
        };
        /** CreateProductRequestModel */
        CreateProductRequestModel: {
            /**
             * Name
             * @description The name of the product
             */
            name: string;
            /**
             * Description
             * @description Product description
             */
            description?: string | null;
            /**
             * Price
             * @description Price of the product in INR
             */
            price?: number | string;
            /**
             * Slug
             * @description Unique slug for the product
             */
            slug?: string;
            /**
             * Tags
             * @description Comma-separated product tags
             */
            tags?: string | null;
            /**
             * Discount
             * @description Discount percentage
             * @default 0
             */
            discount: number | string;
            /**
             * Stock
             * @description Available stock quantity
             */
            stock: number;
            /**
             * Category Id
             * @description ID of the category
             */
            category_id: number;
            /**
             * Sub Category Ids
             * @description List of sub-category IDs
             */
            sub_category_ids?: number[] | null;
            /**
             * Is Active
             * @description Indicates if the product is active
             * @default true
             */
            is_active: boolean;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** MinimalRoleResponseModel */
        MinimalRoleResponseModel: {
            /**
             * Id
             * @description ID of the role
             */
            id: number;
            /**
             * Name
             * @description Name of the role
             */
            name: string;
            /**
             * Description
             * @description Description of the role
             */
            description?: string;
        };
        /** PaginatedResponse[ProductResponseModel] */
        PaginatedResponse_ProductResponseModel_: {
            /** Items */
            items: components["schemas"]["ProductResponseModel"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Page Size */
            page_size: number;
            /** Total Pages */
            total_pages: number;
            /** Has Next */
            readonly has_next: boolean;
            /** Has Previous */
            readonly has_previous: boolean;
        };
        /** PermissionCreateModel */
        PermissionCreateModel: {
            /**
             * Name
             * @description Name of the permission
             */
            name: string;
            /**
             * Description
             * @description Description of the permission
             */
            description?: string;
        };
        /** PermissionResponseModel */
        PermissionResponseModel: {
            /**
             * Id
             * @description ID of the permission
             */
            id: number;
            /**
             * Name
             * @description Name of the permission
             */
            name: string;
            /**
             * Description
             * @description Description of the permission
             */
            description?: string;
        };
        /** ProductResponseModel */
        ProductResponseModel: {
            /**
             * Id
             * @description The unique identifier of the product
             */
            id: number;
            /**
             * Name
             * @description The name of the product
             */
            name: string;
            /**
             * Description
             * @description Product description
             */
            description?: string | null;
            /**
             * User Id
             * @description ID of the user
             */
            user_id: number;
            /**
             * Price
             * @description Price of the product
             */
            price: string;
            /**
             * Slug
             * @description Unique slug for the product
             */
            slug?: string;
            /**
             * Tags
             * @description Comma-separated product tags
             */
            tags?: string | null;
            /**
             * Discount
             * @description Discount percentage
             */
            discount?: string;
            /**
             * Stock
             * @description Available stock quantity
             */
            stock: number;
            /**
             * Category Id
             * @description ID of the category
             */
            category_id: number;
            /**
             * Sub Category Ids
             * @description List of sub-category IDs
             */
            sub_category_ids?: number[] | null;
            /**
             * Is Active
             * @description Indicates if the product is active
             * @default true
             */
            is_active: boolean;
        };
        /** RoleCreateModel */
        RoleCreateModel: {
            /**
             * Name
             * @description Name of the role
             */
            name: string;
            /**
             * Description
             * @description Description of the role
             */
            description?: string;
        };
        /** RoleResponseModel */
        RoleResponseModel: {
            /**
             * Id
             * @description ID of the role
             */
            id: number;
            /**
             * Name
             * @description Name of the role
             */
            name: string;
            /**
             * Description
             * @description Description of the role
             */
            description?: string;
            /**
             * Permission Ids
             * @description List of permission IDs
             */
            permission_ids?: number[] | null;
        };
        /** RoleUpdateModel */
        RoleUpdateModel: {
            /**
             * Name
             * @description Name of the role
             */
            name?: string | null;
            /**
             * Description
             * @description Description of the role
             */
            description?: string | null;
            /**
             * Permission Ids
             * @description List of permission IDs
             */
            permission_ids?: number[] | null;
        };
        /** SingleCartResponseModel */
        SingleCartResponseModel: {
            /**
             * Id
             * @description ID of the cart
             */
            id: number;
            /**
             * Name
             * @description Name of the cart
             */
            name: string;
            /**
             * Reminder Date
             * @description Reminder date of the cart
             */
            reminder_date?: string | null;
            /** @description Status of the cart */
            status: components["schemas"]["CartStatus"];
            /** Items */
            items: components["schemas"]["CartItemsResponseModel"][];
        };
        /** SubCategoryCreateModel */
        SubCategoryCreateModel: {
            /**
             * Name
             * @description Name of the sub-category
             */
            name: string;
            /**
             * Category Id
             * @description ID of the parent category
             */
            category_id: number;
        };
        /** SubCategoryResponseModel */
        SubCategoryResponseModel: {
            /**
             * Id
             * @description ID of the sub-category
             */
            id: number;
            /**
             * Name
             * @description Name of the sub-category
             */
            name: string;
            /**
             * Category Id
             * @description ID of the parent category
             */
            category_id: number;
        };
        /** UpdateProductRequestModel */
        UpdateProductRequestModel: {
            /**
             * Name
             * @description The name of the product
             */
            name?: string | null;
            /**
             * Description
             * @description Product description
             */
            description?: string | null;
            /**
             * Price
             * @description Price of the product
             */
            price?: number | string | null;
            /**
             * Slug
             * @description Unique slug for the product
             */
            slug?: string | null;
            /**
             * Tags
             * @description Comma-separated product tags
             */
            tags?: string | null;
            /**
             * Discount
             * @description Discount percentage
             * @default 0
             */
            discount: number | string | null;
            /**
             * Stock
             * @description Available stock quantity
             */
            stock?: number | null;
            /**
             * Category Id
             * @description ID of the category
             */
            category_id?: number | null;
            /**
             * Sub Category Ids
             * @description List of sub-category IDs
             */
            sub_category_ids?: number[] | null;
            /**
             * Is Active
             * @description Indicates if the product is active
             */
            is_active?: boolean | null;
        };
        /** UserCreate */
        UserCreate: {
            /** Username */
            username: string;
            /** Password */
            password: string;
            /** Email */
            email?: string | null;
            /** Full Name */
            full_name?: string | null;
            /** Phone */
            phone?: string | null;
            /** @default customer */
            role: components["schemas"]["UserRoles"];
        };
        /** UserLoginResponse */
        UserLoginResponse: {
            /** Access Token */
            access_token: string;
            /**
             * Token Type
             * @default bearer
             */
            token_type: string;
        };
        /** UserRead */
        UserRead: {
            /** Id */
            id: number;
            /** Username */
            username: string;
            /** Email */
            email?: string | null;
            /** Full Name */
            full_name?: string | null;
            /** Phone */
            phone?: string | null;
            /** Role Id */
            role_id: number;
            /** Is Internal User */
            is_internal_user: boolean;
            /**
             * Date Joined
             * Format: date-time
             */
            date_joined: string;
            /**
             * Last Active
             * Format: date-time
             */
            last_active: string;
        };
        /**
         * UserRoles
         * @enum {string}
         */
        UserRoles: "admin" | "customer" | "seller" | "tester";
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    _lambda__api_v1_welcome_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    create_user_api_v1_users_register_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    login_user_api_v1_users_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["Body_login_user_api_v1_users_login_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserLoginResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_user_me_api_v1_users_me_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRead"];
                };
            };
        };
    };
    create_address_api_v1_address_create_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AddressCreateModel"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AddressResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_address_api_v1_address_get_by_id__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AddressResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_address_api_v1_address_get_all_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AllAddressResponseModel"];
                };
            };
        };
    };
    update_address_api_v1_address_update__id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AddressCreateModel"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AddressResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_address_api_v1_address__id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AddressResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_role_api_v1_role_create_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RoleCreateModel"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RoleResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_roles_api_v1_role_get_all_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AllRolesResponseModel"];
                };
            };
        };
    };
    get_role_by_id_api_v1_role_get_by_id__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RoleResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_role_api_v1_role_update__id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RoleUpdateModel"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RoleResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_role_api_v1_role__id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_permission_api_v1_permission_create_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PermissionCreateModel"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PermissionResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_permissions_api_v1_permission_get_all_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AllPermissionsResponseModel"];
                };
            };
        };
    };
    get_permission_by_id_api_v1_permission_get_by_id__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PermissionResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_permission_api_v1_permission__id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_category_api_v1_category_create_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CategoryCreateModel"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CategoryResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_category_by_id_api_v1_category_get_by_id__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CategoryResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_category_api_v1_category_get_all_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AllCategoriesResponseModel"];
                };
            };
        };
    };
    delete_category_api_v1_category__id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CategoryResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_sub_category_api_v1_subcategory_create_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SubCategoryCreateModel"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SubCategoryResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_sub_category_by_id_api_v1_subcategory_get_by_id__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SubCategoryResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_sub_category_api_v1_subcategory_get_all_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AllSubCategoriesResponseModel"];
                };
            };
        };
    };
    delete_sub_category_api_v1_subcategory__id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SubCategoryResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_product_api_v1_product_create_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateProductRequestModel"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_product_by_id_api_v1_product_get_by_id__id__get: {
        parameters: {
            query?: {
                page?: number;
                page_size?: number;
            };
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_ProductResponseModel_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_product_by_category_id_api_v1_product_get_by_category_id_get: {
        parameters: {
            query: {
                category_id: number;
                page?: number;
                page_size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_ProductResponseModel_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_product_by_sub_category_id_api_v1_product_get_by_subcategory_id_get: {
        parameters: {
            query: {
                sub_category_id: number;
                page?: number;
                page_size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_ProductResponseModel_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_product_api_v1_product_update__id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateProductRequestModel"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_product_api_v1_product__id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProductResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_cart_api_v1_cart_create_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateCartRequestModel"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CartResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_cart_api_v1_cart_get_by_id__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SingleCartResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_carts_api_v1_cart_get_all_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AllCartsResponseModel"];
                };
            };
        };
    };
    delete_cart_api_v1_cart__id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CartResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_cart_api_v1_cart_update__id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateCartRequestModel"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CartResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_item_to_cart_api_v1_cart_add_item_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AddToCartRequestModel"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CartResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    remove_item_from_cart_api_v1_cart_remove_item__cart_id___product_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                cart_id: number;
                product_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CartResponseModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
